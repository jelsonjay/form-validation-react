[{"C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\App.js":"2","C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\Form.js":"3","C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\Signup.js":"4","C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\useForm.js":"5","C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\ValidationDetail.js":"6","C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\FormSuccess.js":"7"},{"size":200,"mtime":1610562709517,"results":"8","hashOfConfig":"9"},{"size":154,"mtime":1610563228912,"results":"10","hashOfConfig":"9"},{"size":631,"mtime":1610575063158,"results":"11","hashOfConfig":"9"},{"size":2059,"mtime":1610574871884,"results":"12","hashOfConfig":"9"},{"size":742,"mtime":1610575686365,"results":"13","hashOfConfig":"9"},{"size":684,"mtime":1610575566518,"results":"14","hashOfConfig":"9"},{"size":314,"mtime":1610573022672,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cufe3u",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\index.js",[],["33","34"],"C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\App.js",[],"C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\Form.js",["35"],"import React, {useState} from 'react'\r\nimport FormSuccess from './FormSuccess'\r\nimport Signup from './Signup'\r\nimport  './Form.css'\r\n\r\nconst Form = () => {\r\n\r\n  const [isSubimitted, setIsSubmitted] = useState(false)\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n  return (\r\n   <>\r\n    <div className='form-container'>\r\n    <span className='close-btn'>x</span>\r\n    <div className='form-content-left'>\r\n      <img className='form-img' src='./images/photo-4.jpeg' alt='photo'/>\r\n    </div>\r\n    {!isSubimitted ? <Signup submitForm={submitForm}/> : <FormSuccess />}\r\n\r\n    </div>\r\n\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Form","C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\Signup.js",["36"],"import React from 'react'\r\nimport useForm from './useForm'\r\nimport Validate from './ValidationDetail'\r\nimport './Form.css'\r\n\r\nconst Signup = ({submitForm}) => {\r\n  const {handleChange, values, handleSubmit, errors} = useForm(submitForm ,Validate)\r\n  return (\r\n    <div className='form-content-right'>\r\n    <form className='form' onSubmit={handleSubmit}>\r\n    <h1>Signup, create your accoun!</h1>\r\n\r\n    <div className='form-inputs'>\r\n    <label className='form-label'>Username</label>\r\n    <input \r\n    className='form-input' \r\n    type='text' \r\n    name='username' \r\n    placeholder='Type your username' \r\n    value={values.username}\r\n    onChange={handleChange}\r\n    />\r\n    {errors.username && <p>{errors.username}</p>}\r\n    </div>\r\n\r\n    <div className='form-inputs'>\r\n    <label className='form-label' htmlFor='email'>\r\n   Email\r\n    </label>\r\n    <input id='email'type='text' name='email' className='form-input' \r\n    placeholder='Type your email'\r\n    value={values.email}\r\n    onChange={handleChange}\r\n    />\r\n    {errors.email &&  <p>{errors.email}</p>}\r\n    </div>\r\n\r\n    <div className='form-inputs'>\r\n    <label className='form-label' htmlFor='password'>\r\n    Password\r\n    </label>\r\n    <input id='password'type='password' name='password' className='form-input' \r\n    placeholder='Type your password' \r\n    value={values.password}\r\n    onChange={handleChange}\r\n    />\r\n    {errors.password &&  <p>{errors.password}</p>}\r\n    </div>\r\n\r\n    <div className='form-inputs'>\r\n    <label className='form-label' htmlFor='password2'>\r\n     Comfirm Password\r\n    </label>\r\n    <input id='password2' type='password' name='password2' className='form-input' \r\n    placeholder='Comfirm Password' \r\n    value={values.password2}\r\n    onChange={handleChange}\r\n    />\r\n    {errors.password2 &&  <p>{errors.password2}</p>}\r\n    </div>\r\n\r\n    <button className='form-input-btn' type='submit'>Signup</button>\r\n    <span className='form-input-login'>I already have an account! Login<a href='#'> Here</a></span>\r\n    </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup","C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\useForm.js",["37"],"C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\ValidationDetail.js",[],"C:\\Users\\admin\\Desktop\\REACT\\form-falidation\\src\\FormSuccess.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":17,"column":7,"nodeType":"44","endLine":17,"endColumn":74},{"ruleId":"45","severity":1,"message":"46","line":63,"column":72,"nodeType":"44","endLine":63,"endColumn":84},{"ruleId":"47","severity":1,"message":"48","line":32,"column":3,"nodeType":"49","endLine":32,"endColumn":11,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"56","text":"57"},[645,653],"[callback, errors, isSubmitting]"]